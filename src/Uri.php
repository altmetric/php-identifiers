<?php
namespace Altmetric\Identifiers;

class Uri
{
    /* Regular expression to match URIs based on RFC 3986
     *
     * Thanks to Jeff Roberson's "Regular Expression URI Validation",
     * http://jmrware.com/articles/2009/uri_regexp/URI_regex.html#uri-40
     */
    const PATTERN = <<<'EOF'
#
    (
        [A-Za-z][A-Za-z0-9+\-.]* :
        (?:
            //
            (?: (?:[A-Za-z0-9\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})* @)?
            (?:
                \[
                (?:
                    (?:
                        (?:
                            (?:[0-9A-Fa-f]{1,4}:){6} |
                            :: (?:[0-9A-Fa-f]{1,4}:){5} |
                            (?: [0-9A-Fa-f]{1,4})? :: (?:[0-9A-Fa-f]{1,4}:){4} |
                            (?: (?:[0-9A-Fa-f]{1,4}:){0,1} [0-9A-Fa-f]{1,4})? :: (?:[0-9A-Fa-f]{1,4}:){3} |
                            (?: (?:[0-9A-Fa-f]{1,4}:){0,2} [0-9A-Fa-f]{1,4})? :: (?:[0-9A-Fa-f]{1,4}:){2} |
                            (?: (?:[0-9A-Fa-f]{1,4}:){0,3} [0-9A-Fa-f]{1,4})? :: [0-9A-Fa-f]{1,4}: |
                            (?: (?:[0-9A-Fa-f]{1,4}:){0,4} [0-9A-Fa-f]{1,4})? ::
                        )
                        (?:
                            [0-9A-Fa-f]{1,4} : [0-9A-Fa-f]{1,4} |
                            (?: (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?) \.){3} (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
                        ) |
                        (?: (?:[0-9A-Fa-f]{1,4}:){0,5} [0-9A-Fa-f]{1,4})? :: [0-9A-Fa-f]{1,4} |
                        (?: (?:[0-9A-Fa-f]{1,4}:){0,6} [0-9A-Fa-f]{1,4})? ::
                    ) |
                    [Vv][0-9A-Fa-f]+\.[A-Za-z0-9\-._~!$&'()*+,;=:]+
                )
                \] |
                (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3} (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?) |
                (?:[A-Za-z0-9\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*
            )
            (?: : [0-9]* )?
            (?:/ (?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})* )* |
            / (?:    (?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+ (?:/ (?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})* )*)?  |
            (?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+ (?:/ (?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})* )* |
        )
        (?:\? (?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})* )?
        (?:\# (?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})* )?
    )
#x
EOF;

    public static function extract($str)
    {
        preg_match_all(self::PATTERN, $str, $matches);

        return $matches[0];
    }
}
